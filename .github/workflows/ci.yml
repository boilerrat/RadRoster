name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Tests
  backend-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: radroster_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run linting
      run: |
        cd backend
        npm run lint
    
    - name: Run tests
      run: |
        cd backend
        npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/radroster_test
        JWT_SECRET: test-jwt-secret
        NODE_ENV: test
    
    - name: Build backend
      run: |
        cd backend
        npm run build

  # Mobile App Tests
  mobile-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile-app/package-lock.json
    
    - name: Install dependencies
      run: |
        cd mobile-app
        npm ci
    
    - name: Run linting
      run: |
        cd mobile-app
        npm run lint
    
    - name: Run tests
      run: |
        cd mobile-app
        npm test
    
    - name: Build mobile app
      run: |
        cd mobile-app
        npm run build

  # Security Scan
  security-scan:
    runs-on: ubuntu-latest
    needs: [backend-test, mobile-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Run security audit
      run: |
        npm audit --audit-level moderate
        cd backend && npm audit --audit-level moderate
        cd ../mobile-app && npm audit --audit-level moderate

  # Build and Test Summary
  build-summary:
    runs-on: ubuntu-latest
    needs: [backend-test, mobile-test, security-scan]
    if: always()
    
    steps:
    - name: Build Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Backend: ${{ needs.backend-test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Mobile: ${{ needs.mobile-test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Security: ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.backend-test.result }}" == "failure" || "${{ needs.mobile-test.result }}" == "failure" || "${{ needs.security-scan.result }}" == "failure" ]]; then
          exit 1
        fi 